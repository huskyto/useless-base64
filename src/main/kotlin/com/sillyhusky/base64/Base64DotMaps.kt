package com.sillyhusky.base64

class Base64DotMaps : Base64Maps {

    companion object {
        private val instance = Base64DotMaps()
        fun default(): Base64Maps {
            return instance
        }

        private val binToCharMap: Map<Int, Char> = mapOf(
            0 to '.' /* Full Stop (Period) */,
            1 to ':' /* Colon */,
            2 to ';' /* Semicolon */,
            3 to ',' /* Comma */,
            4 to '-' /* Hyphen-Minus */,
            5 to '·' /* Middle Dot */,
            6 to '•' /* Bullet */,
            7 to '․' /* One Dot Leader */,
            8 to '‧' /* Hyphenation Point */,
            9 to '∙' /* Bullet Operator */,
            10 to '‐' /* Hyphen */,
            11 to '‑' /* Non-Breaking Hyphen */,
            12 to '‒' /* Figure Dash */,
            13 to '⋅' /* Dot Operator */,
            14 to '*' /* Asterisk */,
            15 to '÷' /* Division Sign */,
            16 to '⋇' /* Division Times */,
            17 to '⋈' /* Bowtie */,
            18 to '‼' /* Double Exclamation Mark */,
            19 to '⁃' /* Hyphen Bullet */,
            20 to '⁄' /* Fraction Slash */,
            21 to '⁅' /* Left Square Bracket With Quill */,
            22 to '⁆' /* Right Square Bracket With Quill */,
            23 to '⁇' /* Double Question Mark */,
            24 to '⁈' /* Question Exclamation Mark */,
            25 to '⁉' /* Exclamation Question Mark */,
            26 to '⁊' /* Tironian Sign Et */,
            27 to '⁋' /* Reversed Pilcrow Sign */,
            28 to '⁌' /* Black Leftwards Bullet */,
            29 to '⁍' /* Black Rightwards Bullet */,
            30 to '⁝' /* Tricolon */,
            31 to '⁞' /* Vertical Four Dots */,
            32 to '≅' /* Approximately Equal To */,
            33 to '″' /* Double Prime */,
            34 to '¦' /* Broken Bar */,
            35 to '¯' /* Macron */,
            36 to '˄' /* Modifier Letter Up Arrowhead */,
            37 to '˅' /* Modifier Letter Down Arrowhead */,
            38 to 'ˆ' /* Modifier Letter Circumflex Accent */,
            39 to 'ˇ' /* Caron */,
            40 to 'ˉ' /* Modifier Letter Macron */,
            41 to 'ˍ' /* Modifier Letter Low Macron */,
            42 to '˜' /* Small Tilde */,
            43 to '˗' /* Modifier Letter Minus Sign */,
            44 to '˘' /* Breve */,
            45 to '˙' /* Dot Above */,
            46 to '˚' /* Ring Above */,
            47 to '˛' /* Ogonek */,
            48 to '˝' /* Double Acute Accent */,
            49 to '̃' /* Combining Tilde */,
            50 to '̄' /* Combining Macron */,
            51 to '̅' /* Combining Overline */,
            52 to '̇' /* Combining Dot Above */,
            53 to '̉' /* Combining Hook Above */,
            54 to '̣' /* Combining Dot Below */,
            55 to '̲' /* Combining Low Line */,
            56 to '̶' /* Combining Long Stroke Overlay */,
            57 to '̷' /* Combining Short Solidus Overlay */,
            58 to '̸' /* Combining Long Solidus Overlay */,
            59 to '±' /* Plus-Minus Sign */,
            60 to '¬' /* Not Sign */,
            61 to '≡' /* Identical To */,
            62 to '¸' /* Cedilla */,
            63 to '‗' /* Double Low Line */
        )

        private val charToBinMap: Map<Char, Int> = mapOf(
            '.' to 0,
            ':' to 1,
            ';' to 2,
            ',' to 3,
            '-' to 4,
            '·' to 5,
            '•' to 6,
            '․' to 7,
            '‧' to 8,
            '∙' to 9,
            '‐' to 10,
            '‑' to 11,
            '‒' to 12,
            '⋅' to 13,
            '*' to 14,
            '÷' to 15,
            '⋇' to 16,
            '⋈' to 17,
            '‼' to 18,
            '⁃' to 19,
            '⁄' to 20,
            '⁅' to 21,
            '⁆' to 22,
            '⁇' to 23,
            '⁈' to 24,
            '⁉' to 25,
            '⁊' to 26,
            '⁋' to 27,
            '⁌' to 28,
            '⁍' to 29,
            '⁝' to 30,
            '⁞' to 31,
            '≅' to 32,
            '″' to 33,
            '¦' to 34,
            '¯' to 35,
            '˄' to 36,
            '˅' to 37,
            'ˆ' to 38,
            'ˇ' to 39,
            'ˉ' to 40,
            'ˍ' to 41,
            '˜' to 42,
            '˗' to 43,
            '˘' to 44,
            '˙' to 45,
            '˚' to 46,
            '˛' to 47,
            '˝' to 48,
            '̃' to 49,
            '̄' to 50,
            '̅' to 51,
            '̇' to 52,
            '̉' to 53,
            '̣' to 54,
            '̲' to 55,
            '̶' to 56,
            '̷' to 57,
            '̸' to 58,
            '±' to 59,
            '¬' to 60,
            '≡' to 61,
            '¸' to 62,
            '‗' to 63
        )

    }

    override fun getBinToCharMap(): Map<Int, Char> {
        return binToCharMap
    }

    override fun getCharToBinMap(): Map<Char, Int> {
        return charToBinMap
    }

}